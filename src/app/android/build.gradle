import com.android.build.gradle.internal.dsl.SigningConfig

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {


    subprojects { project -> 
    afterEvaluate {
            if((project.plugins.hasPlugin('android') || project.plugins.hasPlugin('android-library'))) {
                android {
                    compileSdkVersion rootProject.ext.compileSdkVersion
                    buildToolsVersion rootProject.ext.buildToolsVersion
                }
            }
        }
    }

    ext.kotlin_version = '1.3.31'
    ext.anko_version = '0.10.4'

    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        maven { url "https://jitpack.io" }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'


        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id "org.jetbrains.dokka-android" version "0.9.17"
}

allprojects {
    repositories {
        mavenLocal()
        jcenter()
        google()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url "$rootDir/../node_modules/react-native/android"
        }
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        maven { url 'https://jitpack.io' }
    }
}

ext {
    buildToolsVersion = "28.0.3"
    minSdkVersion = 21
    compileSdkVersion = 28
    targetSdkVersion = 28
    supportLibVersion = "28.0.0"
    googlePlayServicesVersion = "16.+" // or set latest version
    androidMapsUtilsVersion = "28.0.0"

}

import com.android.build.gradle.internal.dsl.SigningConfig

ext {
    mySigningConfigs = [
            debug : SigningConfig.newInstance([
                    storeFile: file("keystores/debug.keystore"),
                    storePassword: "android",
                    keyAlias: "androiddebugkey",
                    keyPassword: "android"
            ]),
            release : SigningConfig.newInstance([
                    storeFile: file("keystores/debug.keystore"),
                    storePassword: "android",
                    keyAlias: "androiddebugkey",
                    keyPassword: "android"
            ])
    ]
}

